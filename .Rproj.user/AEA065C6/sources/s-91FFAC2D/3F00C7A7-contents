#########################################
# Global Fishing Watch 
# Fisheries Analyst Global
# Coding Assessment 
#########################################
# Coder: Althea Marks
# Email: theamarks@csu.fullerton.edu
# data files: analyst_fishing_data.csv, closuresPolygon (shapefile), other_areas (shapefile)
# Geographic region: Mediterranean Sea
# Data years: 2019
# Code created: 2021_5_20
# Edited: 2021_5_22
# Edited: 2021_5_24
# Edited:
#########################################

########### Load Packages ####################
library(readr) # read in csv
library(magrittr) # pipe function
library(tidyverse) # ggplot and data wrangling
library(sp) # working with spatial data
library(rgdal) # working with vector data
library(maptools)
library(rgeos)
library(maps) # graphing maps
library(rnaturalearth) # map data source, website with descriptions
library(sf) # working with coordinates in ggplot
library(ggspatial)


############# Import Data #################
analyst_fishing_data <- read_csv("analyst_fishing_data.csv")
# Look at dimensions of data
dim(analyst_fishing_data)
# Look at summary stats of data
summary(analyst_fishing_data)

### Read in 2 closure shapefiles from Rproject
closure_poly_sp <- readOGR("./VME-DB_VME_GFCM_1")
# Look at polygon
#plot(closure_poly_sp)

other_poly_sp <- readOGR("./VME-DB_VME_GFCM_4")
# Look at polygon
#plot(other_poly_sp)
##########################################

############ Question 1 ##################
# Calculate the total fishing hours, 
# by gear type, 
# inside both closure areas
# in 2019.
##########################################

# create dataframe from shapefile for ggplot
closure_poly_df <- fortify(closure_poly_sp)
other_poly_df <- fortify(other_poly_sp)

# Graph fishing activity by fishing_class and display closure polygons
test_plot <- ggplot() +
  geom_point(data = analyst_fishing_data,
             aes(x = lon_bin, y = lat_bin, color = fishing_class)) +
  geom_polygon(data = closure_poly_df,
               aes(x = long, y = lat), color = 'black', fill = NA) +
  geom_polygon(data = other_poly_df,
               aes(x = long, y = lat), color = "black", fill = NA) +
  theme_bw() +
  labs(x = "Longitude", y = "Latitude")

test_plot

# Convert fishing dataframe to SpatialPointsDataFrame class with coordinates from columns
# Remember: Longitude listed first, then Latitude
analyst_fishing_data_sp <- analyst_fishing_data # create new object
coordinates(analyst_fishing_data_sp) <- ~ lon_bin + lat_bin # assign long & lat to coordinates
#plot(analyst_fishing_data_sp)

# Check CRS in closure & other_area shp files and fishing data
closure_poly_sp@proj4string
other_poly_sp@proj4string
analyst_fishing_data_sp@proj4string
# closure_poly_sp & other_poly_sp have same CRS, analyst_fishing_data_sp has no CRS

# Assign CRS to analyst_fishing_data_sp from closure_poly_sp
proj4string(analyst_fishing_data_sp) <- proj4string(closure_poly_sp)
# Check if same and assigned properly
analyst_fishing_data_sp@proj4string 

# Clip fishing points within closure polygon
fishing_in_closure_sp <- analyst_fishing_data_sp[closure_poly_sp,]
plot(fishing_in_closure_sp)
fishing_in_closure <- fishing_in_closure_sp@data # extract data from sp points dataframe
# Summarize fishing hours in closure polygon
fish_hrs_closure_sum <- fishing_in_closure %>%
  group_by(fishing_class) %>% #group data by gear type
  summarise(total_fish_hrs = sum(fishing_hours)) # sum fishing hours by gear type
fish_hrs_closure_sum

write_csv(fish_hrs_closure_sum, "2019_FishHrs_Closure_ByGear.csv")

# clip fishing points within other polygon
fishing_in_other_sp <- analyst_fishing_data_sp[other_poly_sp,]
plot(fishing_in_other_sp)
fishing_in_other <- fishing_in_other_sp@data # extract data from sp points dataframe
# summarize fishing hours in other polygon
fish_hrs_other_sum <- fishing_in_other %>% 
  group_by(fishing_class) %>% #group data by gear type
  summarise(total_fish_hrs = sum(fishing_hours)) # sum fishing hours by gear type
fish_hrs_other_sum

write_csv(fish_hrs_other_sum, "2019_FishHrs_Other_ByGear.csv")

# Combine clipped fishing data from both closed areas into single dataframe
fishing_in_both <- rbind(fishing_in_closure, fishing_in_other)

# Check what years are represented
unique(fishing_in_both$year)

# Summarize fishing within the 2 polygons ("closure", "other")
fish_hrs_both_sum <- fishing_in_both %>% 
  group_by(fishing_class) %>% # group data by gear type
  summarise(total_fish_hrs = sum(fishing_hours)) # sum fishing hours by gear type
fish_hrs_both_sum

# Save .csv of findings to Rproject folder
write_csv(fish_hrs_both_sum, "2019_FishHrs_BothClosure_ByGear.csv")



############## Question 2 ###################
# Provide a map or two showing the closure areas 
# overlaid with fishing effort 
# for trawlers and longliners.
##############################################


unique(analyst_fishing_data$fishing_class) # look at all fishing_class types
# Check with GFW, does "longliners" mean both "set_longlines" and "drifting_longlines"?

# Filter out trawler and longliner fishing data
fishing_trawl_long <- analyst_fishing_data %>% 
  filter(fishing_class %in% c("trawlers", "set_longlines", "drifting_longlines"))


# Create land/country basemap from https://www.naturalearthdata.com/
land_sp <- ne_download(scale = 10, type = 'countries', category = 'cultural', returnclass = 'sp')
land_df <- fortify(land_sp) # covert to dataframe for ggplot

# Load color Viridis Color scale
library(viridisLite)

# What are the lat & long bound of closure poly
summary(closure_poly_sp)$bbox

### Map of Closure Area ###
Map_closure_trawl_longline <- ggplot() +
  geom_polygon(data = land_df, # basemap 
               aes(x = long, y = lat, group = group),
               fill = 'grey', color = "black", lwd = 0.1) +
  geom_point(data = fishing_trawl_long, # fishing datapoints
             aes(x = lon_bin, y = lat_bin, color = fishing_class),
             alpha = 0.5) + # make points transparent to show density if layered
  scale_colour_viridis_d(option = "viridis", # use viridis color scale for gear type
                         name = "Fishing Gear", 
                         labels = c("Drifting Longlines", "Set Longlines", "Trawlers")) +
  geom_polygon(data = closure_poly_df, # closure polygon
               aes(x = long, y = lat), color = 'black', fill = NA) +
  coord_sf(xlim = c(27, 37), ylim = c(30, 37), # add a few degrees to closure poly bounds
           crs = "+proj=longlat +datum=WGS84 +no_defs",
           expand = FALSE) +
  labs(x = "Longitude", 
       y = "Latitude",
       title = "Longline and Trawler Fishing 2019: Closure") +
  theme_classic(base_size = 12) +
  theme(legend.key = element_rect(fill = NA, color = NA), # remove fill color from legend
        panel.background = element_rect(fill = "aliceblue"))


Map_closure_trawl_longline

# Save map to Rproject
ggsave(Map_closure_trawl_longline, 
       filename = "Map_Closure_trawl_longline_2019.png",
       width = 10,
       units = c("in"),
       dpi = 400)



##### Map of Other closure #####

# What are the lat & long bound of other closure poly
summary(other_poly_sp)$bbox

Map_other_trawl_longline <- ggplot() +
  geom_polygon(data = land_df, # land mass basemap
               aes(x = long, y = lat, group = group),
               fill = 'grey', color = "black", lwd = 0.1) +
  geom_point(data = fishing_trawl_long, # fishing datapoints
             aes(x = lon_bin, y = lat_bin, color =fishing_class),
             alpha = 0.5) + # make points transparent to show density if layered
  scale_colour_viridis_d(option = "viridis", # use viridis color scale for gear type
                         name = "Fishing Gear", 
                         labels = c("Drifting Longlines", "Set Longlines", "Trawlers")) +
  geom_polygon(data = other_poly_df, # other closure area poly
               aes(x = long, y = lat), color = 'black', fill = NA) +
  coord_sf(xlim = c(3, 10), ylim = c(40, 45), 
           crs = "+proj=longlat +datum=WGS84 +no_defs",
           expand = FALSE) + # don't add extra to edges of limits
  labs(x = "Longitude", 
       y = "Latitude",
       title = "Longline and Trawler Fishing 2019: Other Closure") +
  theme_classic(base_size = 12) +
  theme(legend.key = element_rect(fill = NA, color = NA), # remove fill color from legend
        panel.background = element_rect(fill = "aliceblue"))

Map_other_trawl_longline

# Save map to Rproject
ggsave(Map_other_trawl_longline, 
       filename = "Map_Other_trawl_longline_2019.png",
       width = 10,
       units = c("in"),
       dpi = 400)
  
  

### Question 3 ###################
# Describe a few patterns that you see in the data/maps and 
# comment on how these trends might be impacted by AIS use.


