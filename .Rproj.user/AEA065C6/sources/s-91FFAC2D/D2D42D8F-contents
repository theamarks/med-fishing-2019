########### Native Olympia Oyster Collaborative 
## Restoration Database Manuscript 
## Figure 1: Map of all known Olympia Oyster restoration projects

## Code writen by: Althea Marks, CSU Fullerton

################
# TO DOS
#############

# Area Restoration Scale - Use brightness Ramps - Color Brewer
# https://betterfigures.org/2015/06/23/picking-a-colour-scale-for-scientific-graphics/

# Arange maps into single figure? 

# Annotate States & Contries, Pacific Ocean, compass grey?
# View color Brewer palattes
library(RColorBrewer)
par(mar=c(3,4,2,2))
display.brewer.all()

display.brewer.pal(number, "name") # displays colors
brewer.pal(6, "YlGnBu") # prints colors names

##############################################################
## Setup: load librarys & data
##############################################################

library(tidyverse) # data manupulation package  
library(ggplot2) # plotting and mapping package
library(sf) # mapping data package
library(rnaturalearth) # map data source, website with descriptions
library(rgdal) # mapping package
library(ggspatial) # mapping package
library(ggrepel) # mapping package
library(viridis) # Color palette for Restoration Area - Options: magma , inferno, plasma, viridis, cividis
library(RColorBrewer) # Color palette with YlOrRd
library(cowplot) # combining mulitple plots into single figure
library(scales) # plot scaling - used to adjust legend attributes
library(gtable) # part of extend legend function

# Read in NOOC Restoration project Lat & Long data
NOOC_data <- read.csv("Map_Figure_MS_lat_long.csv", header = TRUE, stringsAsFactors=FALSE)
NOOC_data$no_adults_prop_diff <- as.numeric(NOOC_data$no_adults_prop_diff)
# 'no data' changed to NAs

### Download spatialpolygondataframe from rnatural earth
country <- ne_download(scale = 10, type = 'countries', category = 'cultural', returnclass = 'sf')

### Legend Scale - Restoration Area - Set Up (All maps need)
pretty_breaks <- c(100, 1000, 10000, 20000, 50000)
minVal <- min(NOOC_data$Area_restored_m2, na.rm = T) 
maxVal <- max(NOOC_data$Area_restored_m2, na.rm = T)
labels <- c() # creates empty list
brks <- c(minVal, pretty_breaks, maxVal) # creates list with min value, inbetween breaks, and max value
for(idx in 1:length(brks)){
   labels <- c(labels, round(brks[idx + 1], 2))
}

labels <- labels[1:length(labels)-1] # removes NA at end of list
labels <- scales::comma(labels) # scales library, add comma every 3rd diget, creates chr

NOOC_data$brks <- cut(NOOC_data$Area_restored_m2, # create new column with new catagories
                          breaks = brks, 
                          include.lowest = TRUE, 
                          labels = labels)

brks_scale <- levels(NOOC_data$brks) # make factor
labels_scale <- rev(brks_scale) # reverse variable

### Separate restoration project data by region
NOOC_data_PNW <- NOOC_data %>% 
   filter(map_region == 1)
NOOC_data_OR <-  NOOC_data %>% 
   filter(map_region == 2)
NOOC_data_NorCal <- NOOC_data %>% 
   filter(map_region == 3)
NOOC_data_SoCal <-NOOC_data %>% 
   filter(map_region == 4)

############### Discrete colorbar function ##########
### Source - https://stackoverflow.com/questions/50506832/create-discrete-color-bar-with-varying-interval-widths-and-no-spacing-between-le/50518287#50518287

plot_discrete_cbar = function(
   breaks, # Vector of breaks. If +-Inf are used, triangles will be added to the sides of the color bar
   palette = "Greys", # RColorBrewer palette to use
   colors = RColorBrewer::brewer.pal(length(breaks) - 1, palette), # Alternatively, manually set colors
   direction = 1, # Flip colors? Can be 1 or -1
   spacing = "natural", # Spacing between labels. Can be "natural" or "constant"
   border_color = NA, # NA = no border color
   legend_title = NULL,
   legend_direction = "horizontal", # Can be "horizontal" or "vertical"
   font_size = 5,
   expand_size = 1, # Controls spacing around legend plot
   spacing_scaling = 1, # Multiplicative factor for label and legend title spacing
   width = 0.1, # Thickness of color bar
   triangle_size = 0.1 # Relative width of +-Inf triangles
) {
   require(ggplot2)
   if (!(spacing %in% c("natural", "constant"))) stop("spacing must be either 'natural' or 'constant'")
   if (!(direction %in% c(1, -1))) stop("direction must be either 1 or -1")
   if (!(legend_direction %in% c("horizontal", "vertical"))) stop("legend_direction must be either 'horizontal' or 'vertical'")
   breaks = as.numeric(breaks)
   new_breaks = sort(unique(breaks))
   if (any(new_breaks != breaks)) warning("Wrong order or duplicated breaks")
   breaks = new_breaks
   if (class(colors) == "function") colors = colors(length(breaks) - 1)
   if (length(colors) != length(breaks) - 1) stop("Number of colors (", length(colors), ") must be equal to number of breaks (", length(breaks), ") minus 1")
   if (!missing(colors)) warning("Ignoring RColorBrewer palette '", palette, "', since colors were passed manually")
   
   if (direction == -1) colors = rev(colors)
   
   inf_breaks = which(is.infinite(breaks))
   if (length(inf_breaks) != 0) breaks = breaks[-inf_breaks]
   plotcolors = colors
   
   n_breaks = length(breaks)
   
   labels = breaks
   
   if (spacing == "constant") {
      breaks = 1:n_breaks
   }
   
   r_breaks = range(breaks)
   
   cbar_df = data.frame(stringsAsFactors = FALSE,
                        y = breaks,
                        yend = c(breaks[-1], NA),
                        color = as.character(1:n_breaks)
   )[-n_breaks,]
   
   xmin = 1 - width/2
   xmax = 1 + width/2
   
   cbar_plot = ggplot(cbar_df, aes(xmin=xmin, xmax = xmax, ymin = y, ymax = yend, fill = factor(color, levels = 1:length(colors)))) +
      geom_rect(show.legend = FALSE,
                color=border_color)
   
   if (any(inf_breaks == 1)) { # Add < arrow for -Inf
      firstv = breaks[1]
      polystart = data.frame(
         x = c(xmin, xmax, 1),
         y = c(rep(firstv, 2), firstv - diff(r_breaks) * triangle_size)
      )
      plotcolors = plotcolors[-1]
      cbar_plot = cbar_plot +
         geom_polygon(data=polystart, aes(x=x, y=y),
                      show.legend = FALSE,
                      inherit.aes = FALSE,
                      fill = colors[1],
                      color=border_color)
   }
   if (any(inf_breaks > 1)) { # Add > arrow for +Inf
      lastv = breaks[n_breaks]
      polyend = data.frame(
         x = c(xmin, xmax, 1),
         y = c(rep(lastv, 2), lastv + diff(r_breaks) * triangle_size)
      )
      plotcolors = plotcolors[-length(plotcolors)]
      cbar_plot = cbar_plot +
         geom_polygon(data=polyend, aes(x=x, y=y),
                      show.legend = FALSE,
                      inherit.aes = FALSE,
                      fill = colors[length(colors)],
                      color=border_color)
   }
   
   if (legend_direction == "horizontal") { #horizontal legend
      mul = 1
      x = xmin
      xend = xmax
      cbar_plot = cbar_plot + coord_flip()
      angle = 0
      legend_position = xmax + 0.1 * spacing_scaling
   } else { # vertical legend
      mul = -1
      x = xmax
      xend = xmin
      angle = -90
      legend_position = xmax + 0.2 * spacing_scaling
   }
   
   cbar_plot = cbar_plot +
      geom_segment(data=data.frame(y = breaks, yend = breaks),
                   aes(y=y, yend=yend),
                   x = x - 0.05 * mul * spacing_scaling, xend = xend,
                   inherit.aes = FALSE) +
      annotate(geom = 'text', x = x - 0.1 * mul * spacing_scaling, y = breaks,
               label = labels,
               size = font_size) +
      scale_x_continuous(expand = c(expand_size,expand_size)) +
      scale_fill_manual(values=plotcolors) +
      theme_void()
   
   if (!is.null(legend_title)) { # Add legend title
      cbar_plot = cbar_plot +
         annotate(geom = 'text', x = legend_position, y = mean(r_breaks),
                  label = legend_title,
                  angle = angle,
                  size = font_size)
   }
   
   cbar_plot
}

# # Color Bar Object ------------------------------
(Res_Area_CBar <- plot_discrete_cbar(c(0,100,1000,10000,25000,50000,73000), 
                   colors = viridis(6),
                   spacing = "constant",
                   direction = -1,
                   legend_title = expression(paste("Restoration area ", m^{2})),
                   font_size = 3.5,
                   expand_size = 1.5, # Controls spacing around legend plot
                   spacing_scaling = .75,
                   width = 0.04)
)

# WIndow Coords - Each Region ---------------------------------------------
## Window range for each map (objects called in graphing code, change here if needed!)
coast_xmin <- -112
coast_xmax <- -129
coast_ymin <- 27
coast_ymax <- 52

PNW_xmin <- -125
PNW_xmax <- -121
PNW_ymin <- 46.1 
PNW_ymax <- 49.5

OR_xmin <- -121.5
OR_xmax <- -125.5
OR_ymin <- 42.5
OR_ymax <- 45.74

NorCal_xmin <- -120
NorCal_xmax <- -125
NorCal_ymin <- 36
NorCal_ymax <- 41.25

SoCal_xmin <- -116
SoCal_xmax <- -121.25
SoCal_ymin <- 31
SoCal_ymax <- 35.5

# PNW_aspect_ratio <- (PNW_ymax - PNW_ymin)/(PNW_xmax - PNW_xmin)
#################################################
############ Entire Coast #######################
NOOC_coast <- ggplot(data = country) +
    geom_sf() +
    labs(x = 'Longitude', y = 'Latitude') +
    annotate(geom = "text", x = -118, y = 41, label = "United States", 
           fontface = "italic", color = "grey22", size = 4, angle = 0) +
    annotate(geom = "text", x = -119, y = 51, label = "Canada", 
          fontface = "italic", color = "grey22", size = 4, angle = 0) +
    annotate(geom = "text", x = -118.5, y = 31, label = "Mexico", 
             fontface = "italic", color = "grey22", size = 4, angle = 0) +
    annotation_north_arrow(location = "bl", which_north = "true", 
                         pad_x = unit(0.25, "in"), pad_y = unit(0.5, "in"),
                         style = north_arrow_fancy_orienteering) +
    coord_sf(xlim = c(coast_xmin, coast_xmax), ylim = c(coast_ymin, coast_ymax), expand = FALSE) +
    theme(panel.grid.major = element_line(color = gray(.5), linetype = 'solid', size = 0.25), 
        panel.background = element_rect(fill = 'aliceblue'),
        axis.text.y = element_text(color = "black"),
        axis.text.x = element_text(color = "black"))
### Coast with all insert rectanges
(NOOC_coast_PNW <- ggplot(data = country) +
      geom_sf() +
      geom_rect(xmin = PNW_xmin, xmax = PNW_xmax, ymin = PNW_ymin, ymax = PNW_ymax, 
                fill = NA, colour = "black", size = 0.25) + # add in rectange based on coords from PNW map
      geom_rect(xmin = OR_xmin, xmax = OR_xmax, ymin = OR_ymin, ymax = OR_ymax, 
                fill = NA, colour = "black", size = 0.25) +
      geom_rect(xmin = NorCal_xmin, xmax = NorCal_xmax, ymin = NorCal_ymin, ymax = NorCal_ymax, 
                fill = NA, colour = "black", size = 0.25) +
      geom_rect(xmin = SoCal_xmin, xmax = SoCal_xmax, ymin = SoCal_ymin, ymax = SoCal_ymax, 
                fill = NA, colour = "black", size = 0.25) +
      labs(x = 'Longitude', y = 'Latitude') +
      annotate(geom = "text", x = -118, y = 43, label = "United States", 
               fontface = "italic", color = "grey22", size = 4, angle = 0) +
      annotate(geom = "text", x = -119, y = 51, label = "Canada", 
               fontface = "italic", color = "grey22", size = 4, angle = 0) +
      annotate(geom = "text", x = -118.5, y = 30, label = "Mexico", 
               fontface = "italic", color = "grey22", size = 4, angle = 0) +
      annotation_north_arrow(location = "bl", which_north = "true", 
                             pad_x = unit(0.25, "in"), pad_y = unit(0.5, "in"),
                             style = north_arrow_fancy_orienteering) +
      coord_sf(xlim = c(coast_xmin, coast_xmax), ylim = c(coast_ymin, coast_ymax), expand = FALSE) +
      theme(panel.grid.major = element_line(color = "white", linetype = 'solid', size = 0.25), 
            panel.background = element_rect(fill = 'aliceblue'),
            axis.text.y = element_text(color = "black"),
            axis.text.x = element_text(color = "black")))

##### Save figre in Project Directory #####
#ggsave(filename = "NOOC_Coast_All_boxes.png",
 #      width = (5*1.084746), # maintain aspect ratio from lat & long
  #     height = 5,
   #    dpi = 400, # Dots per inch (Science Journal min 300 dpi)
    #   units = c("in")) # height and width units


###########################################################
######## PNW Map #######################

## Insert map
(Insert_PNW_map <- ggplot(data = country) +
    geom_sf() +
    geom_rect(xmin = PNW_xmin, xmax = PNW_xmax, ymin = PNW_ymin, ymax = PNW_ymax, 
              fill = NA, colour = "black", size = 0.5) +
    coord_sf(xlim = c(coast_xmin, coast_xmax), ylim = c(coast_ymin, coast_ymax), expand = FALSE) +
    theme_void() + # remove all formatting 
    theme(panel.border = element_rect(colour = "black", fill = NA),
          panel.background = element_rect(fill = "aliceblue")))

# PNW map  w/o Insert
(NOOC_PNW <- ggplot(data = country) +
   geom_sf() +
   coord_sf(xlim = c(PNW_xmax, PNW_xmin), # map window coordinates
            ylim = c(PNW_ymin, PNW_ymax),
            expand = FALSE) +
   scale_x_continuous(breaks = seq(-122, -125, by = -1)) + # set longitude axis marks
   scale_y_continuous(breaks = seq(46, 49, by = 1)) + # set latitude axis marks
   geom_point(data = NOOC_data_PNW, # add in layer with restoration site positions & prop_diff
              aes(x = long, y = lat, fill = brks),
              shape = 21,
              size = 5) +
   theme(text = element_text(size = 20, family = "sans", color = "black"), # set text to sans serif / Arial
        # legend.justification = c(1,0), # set which corner of legend legen.position references
         #legend.position = c(0.95, 0.05), # set position of legend (0-1 x,y coords)
         #legend.background = element_rect("transparent", colour = NA), # remove legend background color
         #legend.text = element_text(size = 9), # legend text color and size
         #legend.title = element_text(size = 10), # legend title color and size
         axis.text.x = element_text(color = "black"), # x-axis text
         axis.text.y = element_text(color = "black"), # y-axis text
         panel.grid.major = element_line(color = 'white', linetype = "solid", size = 0.25), # graticules
         panel.background = element_rect(fill = "aliceblue"), # map background color
         panel.border = element_rect(color = "black", fill = NA, linetype = "solid", size = .5)) + 
   labs(title = NULL, x = 'Longitude', y = 'Latitude', size = 12) +
   geom_text_repel(data = NOOC_data_PNW, # data pint labels
                   aes(x = long, y = lat, label = Project_ID),
                   point.padding = 0.75,
                   size = 5,
                   fontface = "bold",
                   # how to adjust point lables
                   nudge_x = c(0.5,0.25,-1,0.25,-0.4,0.25,-1,-1,0.5,-0.5,0.5,-1,-0.75,-0.75,0.5,0),
                   nudge_y = c(0.25,0,0.2,0,0.1,0,0,-0.1,0,0,-0.25,0,0,0,-0.25,-0.25)) +
   annotation_north_arrow(location = "bl", # North Arrow
                           which_north = "true", 
                           pad_x = unit(0.4, "in"),
                           pad_y = unit(0.5, "in"),
                           style = north_arrow_fancy_orienteering) +
   scale_fill_manual(values = rev(viridis(6)), # no.colors from viridis palatte, call for more colors and select a portion [2:6]
                     breaks = rev(brks_scale),
                     guide = FALSE)
)

########## PNW Map with Insert
NOOC_PNW_figure <- ggdraw() +
   draw_plot(NOOC_PNW) +
   draw_plot(Insert_PNW_map,
             hjust = 1, # change justification (where insert map is positioned from)
             vjust = 1,
             x = 0.972, # The distance along a (0,1) x-axis to draw insert
             y = 0.99, # The distance along a (0,1) y-axis to draw insert
             width = 0.35, # The width and height of the plot expressed as proportion of the entire ggdraw object
             height = 0.35) +
   draw_plot(Res_Area_CBar, # Draw color bar on plot
             hjust = 0.5, # change justification (where insert map is positioned from)
             vjust = 0.5,
             x = 0.63,
             y = 0.21,
             width = 0.48)
#NOOC_PNW_figure

##### Save figure with cowplot::save_plot() 
save_plot("NOOC_PNW_Map_Insert_Cbar.pdf", NOOC_PNW_figure, base_height = 8, base_asp = 1.08, dpi = 400)

##### Save figre in Project Directory #####
#ggsave(filename = "NOOC_PNW_Map_Insert.png",
 #      width = (7*1.084746), # maintain aspect ratio from lat & long
  #     height = 7,
   #    dpi = 400, # Dots per inch (Science Journal min 300 dpi)
    #   units = c("in")) # height and width units

# width 512/472 height
###### saving map with preserved aspect ratio
# .svg file OR minimul 300 dpi --> Science Journal


########### Oregon Map ################

## Insert map
(Insert_OR_map <- ggplot(data = country) +
    geom_sf() +
    geom_rect(xmin = OR_xmin, xmax = OR_xmax, ymin = OR_ymin, ymax = OR_ymax, 
              fill = NA, colour = "black", size = 0.5) +
    coord_sf(xlim = c(coast_xmin, coast_xmax), ylim = c(coast_ymin, coast_ymax), expand = FALSE) +
    theme_void() + # remove all formatting 
    theme(panel.border = element_rect(colour = "black", fill = NA),
          panel.background = element_rect(fill = "aliceblue")))

# Oregon Map w/o insert
(NOOC_OR <- ggplot(data = country) +
   geom_sf() +
   coord_sf(xlim = c(OR_xmin, OR_xmax), ylim = c(OR_ymin, OR_ymax), expand = FALSE) +
   scale_x_continuous(breaks = seq(-122, -125, by = -1)) + # set longitude axis marks
   scale_y_continuous(breaks = seq(43, 45, by = 1)) + # set latitude axis marks
   geom_text_repel(data = (NOOC_data_OR), aes(x = long, y = lat, label = Project_ID), 
                   fontface = "bold",
                   point.padding = 0.75,
                   size = 5,
                   nudge_x = c(1,1,1,1,1,1,0.5,0),
                   nudge_y = c(0,0,-0.25,0.25,-.1,0,-0.25,-0.25)) +
   geom_jitter(data = NOOC_data_OR, # offset points so they aren't overlapping
               aes(x = long, y = lat, fill = brks),
               size = 4,
               shape = 21,
               height = 0.002,
               width = 0.05) +
   theme(text = element_text(size = 20, family = "sans", color = "black"), # set text to sans serif / Arial
         panel.grid.major = element_line(color = "white", linetype = "solid", size = 0.25), 
         panel.background = element_rect(fill = "aliceblue"),
         axis.text.x = element_text(color = "black"),
         axis.text.y = element_text(color = "black"),
         panel.border = element_rect(color = "black", fill = NA, linetype = "solid", size = .5)) + 
   labs(x = 'Longitude', y = 'Latitude', size = 12) +
   scale_fill_manual(values = rev(viridis(6)), # no.colors from viridis palatte, call for more colors and select a portion [2:6]
                     breaks = rev(brks_scale),
                     guide = FALSE) +
    annotation_north_arrow(location = "bl", which_north = "true", 
                           pad_x = unit(0.7, "in"),
                           pad_y = unit(3, "in"),
                           style = north_arrow_fancy_orienteering)
)

########## OR Map with Insert
NOOC_OR_figure <- ggdraw(NOOC_OR) +
   draw_plot(Insert_OR_map,
             hjust = 1, # change justification (where insert map is positioned from)
             vjust = 1,
             x = 1.025, # The distance along a (0,1) x-axis to draw insert
             y = 0.989, # The distance along a (0,1) y-axis to draw insert
             width = 0.35, # The width and height of the plot expressed as proportion of the entire ggdraw object
             height = 0.35) +
   draw_plot(Res_Area_CBar, # Draw color bar on plot
             hjust = 0.5, # change justification (where insert map is positioned from)
             vjust = 0.5,
             x = 0.65,
             y = 0.15,
            width = 0.48)
#NOOC_OR_figure

##### Save figure with cowplot::save_plot() 
save_plot("NOOC_OR_Map_Insert_Cbar.pdf", NOOC_OR_figure, base_height = 8, base_asp = 1.04, dpi = 400)

##### Save figre in Project Directory #####
#ggsave(filename = "NOOC_OR_Map_Insert.png",
 #      width = (5*1.036017), # maintain aspect ratio from lat & long
  #     height = 5,
   #    dpi = 400, # Dots per inch (Science Journal min 300 dpi)
    #   units = c("in")) # height and width units
# width 489 / 472 height aspect ratio = 1.036017


########### Nor Cal Map ################

## Insert map
(Insert_NorCal_map <- ggplot(data = country) +
    geom_sf() +
    geom_rect(xmin = NorCal_xmin, xmax = NorCal_xmax, ymin = NorCal_ymin, ymax = NorCal_ymax, 
              fill = NA, colour = "black", size = 0.5) +
    coord_sf(xlim = c(coast_xmin, coast_xmax), ylim = c(coast_ymin, coast_ymax), expand = FALSE) +
    theme_void() + # remove all formatting 
    theme(panel.border = element_rect(colour = "black", fill = NA),
          panel.background = element_rect(fill = "aliceblue")))

#### Nor Cal Map w/o insert
(NOOC_NorCal <- ggplot(data = country) +
   geom_sf() +
   coord_sf(xlim = c(NorCal_xmin, NorCal_xmax),
            ylim = c(NorCal_ymin, NorCal_ymax),
            expand = FALSE) +
   geom_jitter(data = NOOC_data_NorCal,
              aes(x = long, y = lat, fill = brks),
              size = 5,
              shape = 21,
              height = 0.03,
              width = 0.01) +
   theme(text = element_text(size = 20, family = "sans", color = "black"), # set text to sans serif / Arial
         panel.grid.major = element_line(color = "white", linetype = "solid", size = 0.25), 
         axis.text.x = element_text(color = "black"),
         axis.text.y = element_text(color = "black"),
         panel.border = element_rect(color = "black", fill = NA, linetype = "solid", size = .5),
         panel.background = element_rect(fill = "aliceblue")) + 
   scale_x_continuous(breaks = seq(-121, -124, by = -1)) + # set longitude axis marks
   scale_y_continuous(breaks = seq(36, 41, by = 1)) + # set latitude axis marks
   scale_fill_manual(values = rev(viridis(6)), # no.colors from viridis palatte, call for more colors and select a portion [2:6]
                      breaks = rev(brks_scale),
                      guide = FALSE) +
   labs(x = 'Longitude', y = 'Latitude', size = 12) +
   geom_text_repel(data = (NOOC_data_NorCal), aes(x = long, y = lat, label = Project_ID), 
                   fontface = "bold",
                   point.padding = .75,
                   size = 5,
                   nudge_x = c(1,0,0.5,1.25,0,-0.75,-1,-1,1,1,1),
                   nudge_y = c(0,1,1,1,0.5,-0.1,-0.5,-1,-0.25,0,-0.5)) +
   annotation_north_arrow(location = "bl", which_north = "true", 
                          pad_x = unit(0.5, "in"),
                          pad_y = unit(2.5, "in"),
                          style = north_arrow_fancy_orienteering) 
)

########## NorCal Map with Insert
NOOC_NorCal_figure <- ggdraw(NOOC_NorCal) +
   draw_plot(Insert_NorCal_map,
             hjust = 1, # change justification (where insert map is positioned from)
             vjust = 1,
             x = 1.026, # The distance along a (0,1) x-axis to draw insert
             y = 0.99, # The distance along a (0,1) y-axis to draw insert
             width = 0.35, # The width and height of the plot expressed as proportion of the entire ggdraw object
             height = 0.35) +
   draw_plot(Res_Area_CBar, # Draw color bar on plot
             hjust = 0.5, # change justification (where insert map is positioned from)
             vjust = 0.5,
             x = 0.41,
             y = 0.13,
             width = 0.48)
#NOOC_NorCal_figure

##### Save figure with cowplot::save_plot() 
save_plot("NOOC_NorCal_Map_Insert_Cbar.pdf", NOOC_NorCal_figure, base_height = 8, base_asp = 0.85, dpi = 400)


##### Save figre in Project Directory #####
#ggsave(filename = "NOOC_NorCal_Map_Insert.png",
 #      width = (5*0.8580508), # maintain aspect ratio from lat & long
  #     height = 5,
   #    dpi = 400, # Dots per inch (Science Journal min 300 dpi)
    #   units = c("in")) # height and width units
# width 405/472 height
# plot_crop("./NOOC_NorCal_Map_Insert.pdf") # only works on pdf, may only work in Rmarkdown


##########################################
########### SoCal Map ################

## Insert map
Insert_SoCal_map <- ggplot(data = country) +
    geom_sf() +
    geom_rect(xmin = SoCal_xmin, xmax = SoCal_xmax, ymin = SoCal_ymin, ymax = SoCal_ymax, 
              fill = NA, colour = "black", size = 0.5) +
    coord_sf(xlim = c(coast_xmin, coast_xmax), ylim = c(coast_ymin, coast_ymax), expand = FALSE) +
    theme_void() + # remove all formatting 
    theme(panel.border = element_rect(colour = "black", fill = NA),
          panel.background = element_rect(fill = "aliceblue"))

## So Cal map w/o insert
(NOOC_SoCal <- ggplot(data = country) +
   geom_sf() +
   coord_sf(xlim = c(SoCal_xmin, SoCal_xmax),
            ylim = c(SoCal_ymin, SoCal_ymax), expand = FALSE) +
   scale_x_continuous(breaks = seq(-117, -120, by = -1)) + # set longitude axis marks
   scale_y_continuous(breaks = seq(31, 35, by = 1)) + # set latitude axis marks
   geom_jitter(data = NOOC_data_SoCal,
              aes(x = long, y = lat, fill = brks),
              size = 5,
              shape = 21,
              height = 0.04) +
   scale_fill_manual(values = rev(viridis(6)), # no.colors from viridis palatte, call for more colors and select a portion [2:6]
                     breaks = rev(brks_scale),
                     guide = FALSE) +
   theme(text = element_text(size = 20, family = "sans", color = "black"), # set text to sans serif / Arial
         panel.grid.major = element_line(color = "white", linetype = "solid", size = 0.25), 
         panel.background = element_rect(fill = "aliceblue"),
         axis.text.x = element_text(color = "black"),
         axis.text.y = element_text(color = "black"),
         panel.border = element_rect(color = "black", fill = NA, linetype = "solid", size = .5)) +
   labs(x = 'Longitude', y = 'Latitude', title = NULL, size = 12) +
   geom_text_repel(data = (NOOC_data_SoCal),
                   aes(x = long, y = lat, label = Project_ID), 
                   fontface = "bold",
                   point.padding = .75,
                   size = 5,
                   nudge_x = c(0.25,0,0.5,0.25),
                   nudge_y = c(0.5,0.5,0,-0.5)) +
   annotation_north_arrow(location = "bl",
                          which_north = "true", 
                          pad_x = unit(1, "in"),
                          pad_y = unit(2, "in"),
                          style = north_arrow_fancy_orienteering)
)

########## SoCal Map with Insert
NOOC_SoCal_figure <- ggdraw(NOOC_SoCal) +
   draw_plot(Insert_SoCal_map,
             hjust = 1, # change justification (where insert map is positioned from)
             vjust = 1,
             x = 1.075, # The distance along a (0,1) x-axis to draw insert
             y = 0.987, # The distance along a (0,1) y-axis to draw insert
             width = 0.35, # The width and height of the plot expressed as proportion of the entire ggdraw object
             height = 0.35) +
   draw_plot(Res_Area_CBar, # Draw color bar on plot
             hjust = 0.5, # change justification (where insert map is positioned from)
             vjust = 0.5,
             x = 0.5,
             y = 0.17,
             width = 0.48)
# NOOC_SoCal_figure

##### Save figure with cowplot::save_plot() 
save_plot("NOOC_SoCal_Map_Insert_Cbar.pdf", NOOC_SoCal_figure, base_height = 8, base_asp = 1.01, dpi = 400)


##### Save figre in Project Directory #####
ggsave(filename = "NOOC_SoCal_Map_Insert.png",
       width = (5*1.010593), # maintain aspect ratio from lat & long
       height = 5,
       dpi = 400, # Dots per inch (Science Journal min 300 dpi)
       units = c("in")) # height and width units
# width 477/472 height aspect ratio

## How to crop white space from plot kniter::crop_space()?? Something like that

###########################################################
############  Extra ##############
#####################################################
#ggsave(last_plot(),
#      filename = "NOOC_PNW_Map_Insert.svg",
#     width = 5,
#    height = 7,
#   pointsize = 10)

#svg(filename = "NOOC_PNW_Map_Insert.svg")
#NOOC_PNW_figure
#dev.off()

#svglite::svglite("NOOC_PNW_Map_Insert.svg")
#NOOC_PNW_figure
#dev.off()
#################### Transform projection - Coastline Map #######################
############## Decided to not use transformation for coastal map. mostly insert map. Regional maps OK without transformation

# show what CRS is being used. CRS = Coordinate reference systems
st_crs(country)
# EPSG: 4326 - World Geodetic System 1984, used in GPS 

st_proj_info() # available projections, ellipses, datums or units supported by the Proj.4 library

# find details of a particular EPSG code. 
CRS("+init=epsg:3034") 
# 3034 = Lambert Conformal Conic projection Europe 
# EPSG <- make_EPSG() # list of EPSG codes and PROJ.4 codes

# ESRI north America LCC projection - PROJ4
LCC_North_America <- '+proj=lcc +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs'
country <- subset(country, ADM0_A3 %in% c("USA", "CAN", "MEX"))
country_LCC <- st_transform(country, crs = LCC_North_America)
st_crs(country_LCC)

# (x, y) --> (Longitude, Latitude) 
disp_wind_4326 <- st_sfc(st_point(c(-130, 50)), st_point(c(-112, 28)), crs = 4326)
disp_wind_LCC <- st_transform(disp_wind_4326, crs = LCC_North_America)
disp_window <- st_coordinates(disp_wind_LCC)


(NOOC_coast_fig <- ggplot() +
      geom_sf(data = country_LCC) +
      coord_sf(xlim = disp_window[,'X'], ylim = disp_window[,'Y'],
               datum = LCC_North_America, expand = FALSE) +
      theme_bw() +
      theme(panel.grid.major = element_line(color = gray(.5), linetype = 'solid', size = 0.25),
            panel.background = element_rect(fill = 'aliceblue')) +
      labs(x = 'Longitude', y = 'Latitude') +
      annotation_north_arrow(location = "bl", which_north = "true", 
                             pad_x = unit(0.1, "in"), pad_y = unit(0.25, "in"),
                             style = north_arrow_fancy_orienteering))
